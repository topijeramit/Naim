from Crypto.PublicKey import RSA
from Crypto.Cipher import PKCS1_OAEP
import base64

# Step 1: Generate RSA Key Pair (2048-bit)
key = RSA.generate(2048)
private_key = key.export_key()
public_key = key.publickey().export_key()

print("Private Key (PEM format):")
print(private_key.decode())
print("\nPublic Key (PEM format):")
print(public_key.decode())

# Save keys (optional)
with open("private_key.pem", "wb") as f:
    f.write(private_key)
with open("public_key.pem", "wb") as f:
    f.write(public_key)

# Step 2: Encrypt message with public key
message = "This is an RSA encrypted message for Lab 4."
public_key_obj = RSA.import_key(public_key)
cipher_rsa = PKCS1_OAEP.new(public_key_obj)
ciphertext = cipher_rsa.encrypt(message.encode())
print("\nEncrypted Message (Base64):", base64.b64encode(ciphertext).decode())

# Step 3: Decrypt message with private key
private_key_obj = RSA.import_key(private_key)
decipher_rsa = PKCS1_OAEP.new(private_key_obj)
decrypted_message = decipher_rsa.decrypt(ciphertext)
print("Decrypted Message:", decrypted_message.decode())
